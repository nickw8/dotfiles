format = """
$os\
$hostname\
$directory\
${custom.git_server}\
$git_branch\
$git_state\
$git_status\
$fill\
$python\
$terraform\
$cmd_duration\
$time\
$line_break\
$character
"""

[aws]
format = '\[[$symbol($profile)(\($region\))(\[$duration\])]($style)\]'
symbol = "\uf0ef "

[character]
success_symbol = "[❯](purple)"
error_symbol = "[❯](red)"
vimcmd_symbol = "[❮](green)"

[cmd_duration]
format = '\[[⏱ $duration]($style)\] '

[directory]
truncation_symbol = '…/'
truncation_length = 0
style = "blue"

[docker_context]
format = '\[[$symbol$context]($style)\]'

[fill]
symbol = " "

[git_branch]
format = '[$symbol$branch]($style)'
style = "bright-black"
symbol = "\uF126 "

[git_status]
# format = '([\[$all_status$ahead_behind\]]($style))'
format = "[[(*$conflicted$untracked$modified$staged$renamed$deleted)](218) ($ahead_behind$stashed)]($style)"
style = "cyan"

[git_state]
format = '\([$state( $progress_current/$progress_total)]($style)\) '
style = "bright-black"

[golang]
format = '\[[$symbol($version)]($style)\]'

[guix_shell]
format = '\[[$symbol]($style)\]'

[haskell]
format = '\[[$symbol($version)]($style)\]'

[helm]
format = '\[[$symbol($version)]($style)\]'

[kubernetes]
format = '\[[$symbol$context]($style)\]'
symbol = "\ue81d "

[[kubernetes.contexts]]
# "bold red" style + default symbol when Kubernetes current context name equals "production" *and* the current user
# equals "admin_user"
context_pattern = "production"
style = "bold red"
context_alias = "prod"

[[kubernetes.contexts]]
# Using capture groups
# Contexts from GKE, AWS and other cloud providers usually carry additional information, like the region/zone.
# The following entry matches on the GKE format (`gke_projectname_zone_cluster-name`)
# and renames every matching kube context into a more readable format (`gke-cluster-name`):
context_pattern = "gke_.*_(?P<cluster>[\\w-]+)"
context_alias = "$cluster"

[lua]
format = '\[[$symbol($version)]($style)\]'

[memory_usage]
format = '\[$symbol[$ram( | $swap)]($style)\]'

[nix_shell]
format = '\[[$symbol$state( \($name\))]($style)\]'

[nodejs]
format = '\[[$symbol($version)]($style)\]'
disabled = true

[ocaml]
format = '\[[$symbol($version)(\($switch_indicator$switch_name\))]($style)\]'

[opa]
format = '\[[$symbol($version)]($style)\]'

[os]
format = '[$symbol]($style)'
disabled = false
style = "bright-white"

[os.symbols]
Macos = "\ue635 "

[package]
format = '\[[$symbol$version]($style)\]'

[python]
format = '[${symbol}]($style)'
# format = '\[[${symbol}${pyenv_prefix}(${version})(\($virtualenv\))]($style)\]'
symbol = "\ue235 "

[red]
format = '\[[$symbol($version)]($style)\]'

[rust]
format = '\[[$symbol($version)]($style)\]'

[sudo]
format = '\[[as $symbol]($style)\]'

[terraform]
format = '[$symbol $workspace]($style) '
symbol = "󱁢"

[time]
format = '[$time]($style)'
use_12hr = true
disabled = false
style = "bright-black"

[username]
format = '\[[$user]($style)\]'

[custom.git_server]
description = "Display symbol for remote Git server"
command = """
GIT_REMOTE=$(command git ls-remote --get-url 2> /dev/null)
if [[ "$GIT_REMOTE" =~ "github" ]]; then
    echo "\uf09b "
elif [[ "$GIT_REMOTE" =~ "gitlab" ]]; then
    echo "\uf296 "
else
    echo "  "
fi
"""
when = 'git rev-parse --is-inside-work-tree 2> /dev/null'
format = "[$output]($style)  "
shell = ["bash", "--noprofile", "--norc"]
style = "bright-black"

